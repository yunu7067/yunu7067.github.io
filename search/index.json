[{"content":"스벨트 킷의 서버 사이드 기능 중 하나인 엔드포인트에 대해서 설명합니다.\nEndpoints /* [slug].json.ts */ import db from \u0026#34;$lib/database\u0026#34;; import type { RequestHandler } from \u0026#34;@sveltejs/kit\u0026#34;; import type { Locals } from \u0026#34;$lib/types\u0026#34;; export const get: RequestHandler\u0026lt;Locals\u0026gt; = ({ params }) =\u0026gt; { // the `slug` parameter is available because this file  // is called [slug].json.ts  const { slug } = params; const article = await db.get(slug); if (article) { return { body: { article, }, }; } }; 스벨트 킷은 .js 및 .ts 파일을 엔드포인트로 인식합니다. /todos/index.json.ts와 같은 엔드포인트는 index가 생략되어 /todos.json와 같이 접근하며, 동적 경로는 [id].ts와 같은 형식으로 사용할 수 있습니다.\n함수명을 get, post, patch와 같이 HTTP 메서드명과 동일하게 작성해줍니다. delete의 경우 자바스크립트에서 이미 사용중인 예약어이기 때문에 del로 축약하여 사용합니다.\nRequest /* [slug].json.ts */ import db from \u0026#34;$lib/database\u0026#34;; import type { RequestHandler } from \u0026#34;@sveltejs/kit\u0026#34;; import type { Locals } from \u0026#34;$lib/types\u0026#34;; export const get: RequestHandler\u0026lt;Locals\u0026gt; = ({ params }) =\u0026gt; {  // the `slug` parameter is available because this file  // is called [slug].json.ts  const { slug } = params; const article = await db.get(slug); if (article) { return { body: { article, }, }; } }; request에는 params 말고도 body, locals, method, host, path, query, headers, rawBody 객체가 존재합니다.\n params: Record\u0026lt;string, string\u0026gt; - [slug].json.ts에서 slug와 같이 변수로 설정한 페이지 동적 경로. body: ParameterizedBody - 요청 바디 locals: Locals - ./src/hooks.ts에서 저장한 데이터 method : string - HTTP 메서드 종류 (GET, POST, PATCH 등) host: string - 요청 호스트 도메인 path: string - 요청 경로 query: URLSearchParams - URL 쿼리 headers: RequestHeaders - HTTP 헤더 데이터 rawBody: RawBody - Uint8Array 타입의 가공되지 않은 요청 바디  body의 파싱은 아래 내용을 따릅니다.\n content-type이 text/plain일 경우 string 형식으로 변환됩니다. content-type이 application/json일 경우 JSONValue 형식(object, Array, primitive)으로 변환됩니다. content-type이 application/x-www-form-urlencoded 또는 multipart/form-data일 경우 읽기 전용인 FormData 객체로 변환됩니다. 다른 모든 경우 Uint8Array로 변환됩니다.  Response /* [slug].json.ts */ import db from \u0026#34;$lib/database\u0026#34;; import type { RequestHandler } from \u0026#34;@sveltejs/kit\u0026#34;; import type { Locals } from \u0026#34;$lib/types\u0026#34;; export const get: RequestHandler\u0026lt;Locals\u0026gt; = ({ params }) =\u0026gt; { // the `slug` parameter is available because this file  // is called [slug].json.ts  const { slug } = params; const article = await db.get(slug); if (article) { return { body: { article, }, };  } }; 엔드포인트의 반환 객체는 status, header, body 이렇게 세 가지 속성으로 구성됩니다. Body에 객체가 들어갈 경우 headers의 Content-Type에 \u0026lsquo;application/json\u0026rsquo;을 명시해주지 않아도 자동으로 Json 객체로 변환됩니다.\n status?: number - HTTP 상태 코드를 명시 (200, 301, 400, 404 등) headers?: ResponseHeaders - HTTP 헤더 데이터 (Content-Type 등)을 명시 body?: Body - 응답 바디 데이터  References 스벨트 킷 공식문서\n","date":"2021-12-19T00:34:04+09:00","image":"https://yunu7067.github.io/p/sveltekit-endpoints/svelte-kit-horizontal.svg","permalink":"https://yunu7067.github.io/p/sveltekit-endpoints/","title":"Sveltekit Endpoints"},{"content":"Hugo 메모   site 생성 hugo new site site_name\n  theme 추가 (atack 테마 기준) git clone https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack\n  (선택사항)\n config.toml 삭제 themes/themename/exampleSite 내용물을 site 폴더로 복사    포스트 추가 hugo new post/first-post/index.md\n   Photo by Florian Klauer on Unsplash   Photo by Luca Bravo on Unsplash \n Photo by Helena Hertz on Unsplash   Photo by Hudai Gayiran on Unsplash \n","date":"2021-06-27T15:40:14+09:00","image":"https://yunu7067.github.io/p/hugo-memo/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_120x120_fill_q75_box_smart1.jpg","permalink":"https://yunu7067.github.io/p/hugo-memo/","title":"Hugo Memo"},{"content":"문제점  에러 메시지  Content Security Policy : 페이지 설정에 의해 리소스 로드가 차단됨: blob:https://example.com (\u0026ldquo;script-src\u0026rdquo;)\n해결방안 nginx 설정파일에서 Content Security Policy 정책을 사용하는 경우, blob 리소스가 차단될 수 있다. 이러한 경우 Content-Security-Policy 맨 뒤에 worker-src blob:을 추가해주면 된다.\n nginx config에 추가 \n","date":"2021-04-29T10:13:01+09:00","image":"https://yunu7067.github.io/p/content-security-policy/blob_err_resolve_hub831fd60a385e4121e4eac0a072b992a_11111_120x120_fill_box_smart1_3.png","permalink":"https://yunu7067.github.io/p/content-security-policy/","title":"Content Security Policy"},{"content":" DCMI Terms 문화체육관광부 - 국립중앙도서관 더블린 코어 소개  이하 내용은 DCIM 공식 문서 및 문화체육관광부 국립중앙도서관 더블린 코어 페이지에서 발췌한 내용입니다.\n Attributes 필수 속성  이름(Name) - 기계가 처리할 수 있는 용어에 할당된 고유한 이름 URI - 해당 속성에 대한 웹상에서 적용 가능한 고유 식별자 레이블(Label) - 용어의 다른 형태의 이름. 사람이 읽고 이해하기 쉬운 이름으로, 기계 가독을 위한 이름(Name) 특성과 구분 정의(Definition) - 용어의 개념과 특성에 대한 설명 용어유형(Type of Term) - 용어의 유형으로 DCMI에서 정의된 어휘만 사용  부가적인 속성   주석 (Comment) - 해당 용어의 사용에 관한 부가 정보\n  참조 (See) - 해당 속성에 관한 문서\n  참조정보 (References) - ‘정의’ 나 ‘참조’ 항목에서 참조된 자원\n  상위 속성 (Refines) - 해당 용어가 속한 상위 속성\n  상위 클래스 (Broader Than) - 해당 용어가 속한 상위클래스\n* DCMI 클래스는 \u0026lt;Agent\u0026gt;, \u0026lt;AgentClass\u0026gt;, \u0026lt;BibliographicResource\u0026gt; 등 22개로 구성 (http://www.dublincore.org/documents/dcmi-terms/#section-6 를 참고하세요.)\n  하위 클래스 (Narrower Than) - 해당 용어에 속한 하위클래스\n  사용 도메인 (Has Domain) - 해당 용어가 사용되는 상위 도메인(인스턴스)\n  값 영역 (Has Range) - 해당 용어의 값을 입력하는데 사용 가능한 형식 또는 범위\n  해당 어휘집 (Member Of) - 해당 용어가 정의된 어휘 인코딩 체계\n  해당 인스턴스 (Instance Of) - 해당 용어가 속한 인스턴스\n  버전 (Version) - 해당 용어의 이력\n  유사 속성 (Equivalent Property) - 해당 용어와 유사하게 사용되는 용어\n  Properties abstract, accessRights, accrualMethod, accrualPeriodicity, accrualPolicy, alternative, audience, available, bibliographicCitation, conformsTo, contributor, coverage, created, creator, date, dateAccepted, dateCopyrighted, dateSubmitted, description, educationLevel, extent, format, hasFormat, hasPart, hasVersion, identifier, instructionalMethod, isFormatOf, isPartOf, isReferencedBy, isReplacedBy, isRequiredBy, issued, isVersionOf, language, license, mediator, medium, modified, provenance, publisher, references, relation, replaces, requires, rights, rightsHolder, source, spatial, subject, tableOfContents, temporal, title, type, valid\n굵은 글씨는 DCMES(Dublin Core™ Metadata Element Set)의 용어. 총 15개.\n통제 어휘 (Controlled Vocabulary)    요소 상세구문 인코딩 스킴     Title\n(주제) alternative    creator\n(제작자)     subject\n(주제)  DDC, LCC, LCSH, NLM, UDC, MESH   description\n(설명) abstract, tableOfContents, provenance    publisher\n(출판사)     contributor\n(기여자)     date\n(날짜) created, valid, issued, modified, dateCopyrighted, dateSubmitted, available, dateAccepted W3CDTF   type\n(유형)  DCMIType   format\n(형식) extent, medium IMT   identifier\n(식별자) bibliographicCitation URI   source\n(출처) URI    language\n(언어)  RFC4646, ISO639-2, ISO639-3, RFC1766, RFC3066   relation\n(관계) isVersionOf, isReferencedBy, isReplacedBy, isRequiredBy, isPartOf, inReferencedBy, isFormatOf, conformsTo, hasVersion, replaces, requires, hasPart, references, hasFormat    coverage\n(범위) spatial, temporal Box, Point, Period, ISO3166, TGN, W3DCTF   rights\n(저작권) accessRights, rightsHolder, license     Dublin Core™ Metadata Element Set 초기의 더블린 코어 요소. 15개의 요소로 구성되어 있고 모든 요소가 평면적이기 때문에 계층성이 없고, 선택적(Optional)이며 반복 가능하고 어떤 순서로든 사용할 수 있다. 해당 속성(Property)는 /elements/1.1/ 네임스페이스에 기술되어 있다.\n https://librarian.nl.go.kr/LI/contents/L10202000000.do \n  Content (내용)\n Title (표제) : 자원에 부여된 이름 Description (설명) : 자원의 내용물에 대한 설명 Type (유형) : 자원의 내용물의 성격\u0026gt;이나 장르 Subject (주제) : 자원의 주제. 통상적으로 주제는 핵심어나 핵심어구, 분류기호 등이 포함되며, 통제 어휘로 사용할 것을 권고함 Source (출처) : 기술 대상 자원이 파생된 (원) 자원 Relation (관계) : 관련 자원에 대한 참조 Coverage (범위) : 자원의 내용물의 수량이나 범위    Intellectual Property (지적재산권)\n Creator (제작자) : 자원의 내용물을 만드는 데 일차적인 책임을 가지는 개체(엔티티) Publisher (발행처) : 자원 접근(이용)에 책임이 있는 개체. 발행처에는 개인, 기관, 서비스 등이 포함됨 Rights (이용조건) : 자원의 저작권 정보. 통상적으로 저작권 정보에는 지적 재산권과 같이 자원과 관련된 재산권 내용을 기술함 Contributor (기여자) : 자원\u0026gt;에 기여한 책임이 있는 개체. 사람, 기관, 서비스 등이 해당됨    Instantiation (인스턴스화)\n Date (발행일자) : 자원이 현재의 형태로써 이용 가능하게 된 날짜 Format (형식) : 자원의 파일 형식이나 물리적 매체. 경우에 따라 크기나 재생시간을 포함할 수 있으며, MIME과 같은 통제어휘의 사용을 권고함 Identifier (식별자) : 특정 환경 내에서의 자원의 참조 정보. 공식적인 식별 체계를 준용한 문자열을 사용할 것을 권고함 Language (언어) : 자원의 지적 내용의 언어    용어 작성중\n","date":"2021-04-28T13:20:00+09:00","image":"https://yunu7067.github.io/p/dublin-core-metadata-initiative/dublin_core_block_hufc19414258e6ca60cda3fc71ebafc805_27666_120x120_fill_box_smart1_3.png","permalink":"https://yunu7067.github.io/p/dublin-core-metadata-initiative/","title":"Dublin Core™ Metadata Initiative"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","date":"2019-03-11T00:00:00Z","image":"https://yunu7067.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://yunu7067.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n YouTube Privacy Enhanced Shortcode    Twitter Simple Shortcode .twitter-tweet { font: 14px/1.45 -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; border-left: 4px solid #2b7bb9; padding-left: 1.5em; color: #555; } .twitter-tweet a { color: #2b7bb9; text-decoration: none; } blockquote.twitter-tweet a:hover, blockquote.twitter-tweet a:focus { text-decoration: underline; }  “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019  Vimeo Simple Shortcode  .__h_video { position: relative; padding-bottom: 56.23%; height: 0; overflow: hidden; width: 100%; background: #000; } .__h_video img { width: 100%; height: auto; color: #000; } .__h_video .play { height: 72px; width: 72px; left: 50%; top: 50%; margin-left: -36px; margin-top: -36px; position: absolute; cursor: pointer; }  ","date":"2019-03-10T00:00:00Z","permalink":"https://yunu7067.github.io/p/rich-content/","title":"Rich Content"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }}  To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"https://yunu7067.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }","date":"2019-03-05T00:00:00Z","image":"https://yunu7067.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"https://yunu7067.github.io/p/emoji-support/","title":"Emoji Support"}]