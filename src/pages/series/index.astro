---
import type {PostMetadata} from '$types';
import MainLayout from '$lays/MainLayout.astro';
import Hero from '$coms/layout/Hero.astro';
import SeriesPreview from '$coms/blog/SeriesPreview.astro';
import BlogSubNavigations from '$coms/blog/SubNavigations.astro';
import config from '$config';

export interface Props {}

const allPosts = await Astro.glob('../p/**/*.{md,mdx}');
// 최신 게시글 먼저 탐색해 최근에 글이 추가된 시리즈가 위로 갈 수 있도록 함.
const sortedPosts = allPosts.sort(
  (a, b) =>
    new Date(b.frontmatter.publishDate).getTime() - new Date(a.frontmatter.publishDate).getTime(),
);

const seriesData: {
  [key: string]: {count: number; lastUpdated: number};
} = {};
const seriesList = [];

sortedPosts.map(post => {
  const {publishDate, series} = post.frontmatter as PostMetadata;
  const currentPostPublishDate = new Date(publishDate).getTime();
  if (series) {
    // 이미 데이터가 있으면 seriesData에서 게시글 카운트만 올리고,
    // 없으면 해당 시리즈를 seriesList에 추가한 다음에 seriesData에 게시글 카운트 추가함.
    if (seriesData[series]) {
      seriesData[series] = {
        count: seriesData[series].count + 1,
        lastUpdated:
          seriesData[series].lastUpdated > currentPostPublishDate
            ? seriesData[series].lastUpdated
            : currentPostPublishDate,
      };
    } else {
      seriesList.push(series);
      seriesData[series] = {
        count: 1,
        lastUpdated: new Date(publishDate).getTime(),
      };
    }
  }
});

const canonicalURL = Astro.url.toString();
const props = {
  wide: false,
  seo: {
    title: 'Series',
    canonical: canonicalURL,
  },
  NavigationItems: {
    blog: {enabled: true, expanded: true},
    home: {enabled: true, expanded: false},
    portfolio: {enabled: true, expanded: false},
    rss: {enabled: false, expanded: false},
    search: {enabled: false, expanded: false},
    series: {enabled: false, expanded: false},
    theme: {enabled: true, expanded: true},
  },
};
---

<MainLayout
  config={config}
  seo={props.seo}
  NavigationItems={props.NavigationItems}
  wide={props.wide}
>
  <main class='w-full'>
    <Hero category={'Blog'} title={'Series'} subtitle={'All series'} />

    <div class='max-w-3xl w-full mx-auto px-5 py-4'>
      <BlogSubNavigations disabled={{series: true}} />

      {
        seriesList.map(series => (
          <SeriesPreview
            series={series}
            count={seriesData[series].count}
            lastUpdated={seriesData[series].lastUpdated}
            locale={config.locale.languageCode}
          />
        ))
      }
    </div>
  </main>
</MainLayout>
