---
import {Picture} from '@astrojs/image/components';
import type {PostInstance} from '$types';
import {classes, getLongDateString} from '$utils';
import config from '$config';

export interface Props {
  posts: (PostInstance & {
    frontmatter: {
      heroImageMetadata?: ImageMetadata;
    };
  })[];
}

const {posts} = Astro.props;

/*
	build buf fix
	https://github.com/withastro/astro/issues/3373 
 */
const images = import.meta.glob<ImageMetadata>('/src/assets/blog/**/*', {import: 'default'});
// console.log({images});
for (let i = 0; i < posts.length; i++) {
  const heroImage = posts[i].frontmatter?.heroImage;
  if (heroImage) posts[i].frontmatter.heroImageMetadata = await images[heroImage]();
}
---

<div class='flex flex-col divide-y dark:divide-gray-700'>
  {
    posts.map(post => (
      <section class='py-11 first:pt-4 last:pb-4 flex flex-col'>
        {/* Hero Image */}
        {post.frontmatter.heroImage && (
          <a href={post.url}>
            <div class='mb-4 w-full h-56 overflow-hidden flex items-center justify-center bg-gray-100'>
              <Picture
                src={post.frontmatter?.heroImageMetadata?.src}
                aspectRatio={
                  post.frontmatter?.heroImageMetadata
                    ? post.frontmatter?.heroImageMetadata.width /
                      post.frontmatter?.heroImageMetadata.height
                    : 16 / 9
                }
                alt='Hero'
                sizes=''
                widths={[400, 800, 1200]}
                formats={['webp']}
              />
            </div>
          </a>
        )}

        {/* Title */}
        <h2 class='text-3xl font-bold line-clamp-1'>
          <a href={post.url}>{post.frontmatter.title}</a>
        </h2>

        {/* Published Date */}
        <div class='mt-2 flex flex-row text-gray-500 text-sm'>
          <time datetime={post.frontmatter.publishDate}>
            {getLongDateString(config.locale, new Date(post.frontmatter.publishDate))}
          </time>
          <div class='px-2'>Â·</div>
          <span>{post.frontmatter.minutesRead}</span>
        </div>

        {/* Description */}
        {post.frontmatter.description && (
          <p class='mt-2 text-gray-600 tracking-tight line-clamp-3'>
            {post.frontmatter.description}
          </p>
        )}

        {/* Tags */}
        {post.frontmatter.tags && (
          <ul class='mt-4 flex flex-row gap-1.5 flex-wrap'>
            {post.frontmatter.tags?.map(tag => (
              <li class='tag clickable dark:clickable-dark'>
                <a class='block px-2.5 py-1.5' href={`/tag/${tag}`}>
                  {tag}
                </a>
              </li>
            ))}
          </ul>
        )}
      </section>
    ))
  }
</div>
