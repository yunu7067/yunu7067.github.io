---
import {calcImageSize, classes} from '$utils';
import {Image} from '@astrojs/image/components';

const HERO_WIDTH = 3000;

export interface Props {
  /** on the title */
  category?: unknown | undefined;
  title?: unknown | undefined;
  /** down the title */
  subtitle?: unknown | undefined;
  /** back the title */
  heroImage?: string | undefined;
}

const props = Astro.props;

/*
	build buf fix
	https://github.com/withastro/astro/issues/3373 
 */
let heroImageMetadata;
let heroSize: {
  width: number;
  height: number;
};
const imageSrc = props.heroImage;
if (imageSrc) {
  const images = import.meta.glob<ImageMetadata>('/src/assets/blog/**/*', {import: 'default'});
  heroImageMetadata = await images[imageSrc]();
  heroSize = calcImageSize(heroImageMetadata, HERO_WIDTH);
} else {
  heroSize = {width: 0, height: 0};
}
---

<div
  class={classes(
    'pt-[88px] flex flex-col relative',
    props.heroImage ? 'lg:h-[max(50vh,550px)] h-[min(50vh,550px)]' : '',
  )}
>
  {
    props.heroImage && (
      <>
        <div class='absolute top-0 left-0 w-full h-full -z-10 overflow-hidden'>
          <Image
            class='w-full h-full object-cover'
            src={(heroImageMetadata as ImageMetadata).src}
            alt='Hero Image'
            width={heroSize.width}
            height={heroSize.height}
            format={'webp'}
          />
        </div>

        <div class='absolute top-0 left-0 w-full h-full -z-10'>
          <div class='w-full h-full bg-gradient-to-b from-transparent to-[hsla(0deg,0%,100%,1)] dark:to-slate-900 backdrop-filter' />
        </div>
      </>
    )
  }
  <div class='max-w-3xl w-full mx-auto px-5 pt-8 pb-24'>
    <span class='md:text-lg text-base text-gray-500'>{props.category}</span>
    <h1
      class='mb-2 md:text-6xl sm:text-5xl text-4xl font-bold text-gray-900 dark:text-gray-100 leading-relaxed'
    >
      {props.title}
    </h1>
    <h2 class='md:text-2xl sm:text-xl text-lg leading-normal text-gray-600 dark:text-gray-400'>
      {props.subtitle}
    </h2>
  </div>
</div>
